[{"C:\\Users\\кибер\\Desktop\\JS-16-19\\dodo-pizza\\src\\pages\\cart\\index.jsx":"1","C:\\Users\\кибер\\Desktop\\JS-16-19\\dodo-pizza\\src\\components\\cartItem\\index.js":"2","C:\\Users\\кибер\\Desktop\\JS-16-19\\dodo-pizza\\src\\redux\\reducers\\cart.js":"3","C:\\Users\\кибер\\Desktop\\JS-16-19\\dodo-pizza\\src\\components\\header\\index.js":"4","C:\\Users\\кибер\\Desktop\\JS-16-19\\dodo-pizza\\src\\redux\\reducers\\filters.js":"5","C:\\Users\\кибер\\Desktop\\JS-16-19\\dodo-pizza\\src\\redux\\reducers\\index.js":"6","C:\\Users\\кибер\\Desktop\\JS-16-19\\dodo-pizza\\src\\components\\filter\\index.js":"7","C:\\Users\\кибер\\Desktop\\JS-16-19\\dodo-pizza\\src\\pages\\home.jsx":"8","C:\\Users\\кибер\\Desktop\\JS-16-19\\dodo-pizza\\src\\components\\sortPopUp\\index.js":"9","C:\\Users\\кибер\\Desktop\\JS-16-19\\dodo-pizza\\src\\components\\menu\\index.js":"10","C:\\Users\\кибер\\Desktop\\JS-16-19\\dodo-pizza\\src\\redux\\actions\\pizzas.js":"11","C:\\Users\\кибер\\Desktop\\JS-16-19\\dodo-pizza\\src\\components\\pizzas\\index.js":"12"},{"size":7733,"mtime":1611143570578,"results":"13","hashOfConfig":"14"},{"size":3971,"mtime":1611143614400,"results":"15","hashOfConfig":"14"},{"size":3030,"mtime":1611143945958,"results":"16","hashOfConfig":"14"},{"size":2678,"mtime":1610970390698,"results":"17","hashOfConfig":"14"},{"size":444,"mtime":1611312263913,"results":"18","hashOfConfig":"14"},{"size":244,"mtime":1610964886100,"results":"19","hashOfConfig":"14"},{"size":1193,"mtime":1611313099372,"results":"20","hashOfConfig":"14"},{"size":219,"mtime":1607516829562,"results":"21","hashOfConfig":"14"},{"size":2589,"mtime":1611313526606,"results":"22","hashOfConfig":"14"},{"size":4844,"mtime":1611315928780,"results":"23","hashOfConfig":"14"},{"size":459,"mtime":1611316191214,"results":"24","hashOfConfig":"14"},{"size":1999,"mtime":1611138133782,"results":"25","hashOfConfig":"14"},{"filePath":"26","messages":"27","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"1ict20x",{"filePath":"28","messages":"29","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"31","messages":"32","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"33","usedDeprecatedRules":"30"},{"filePath":"34","messages":"35","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"36","messages":"37","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"38","messages":"39","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"40","messages":"41","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"42","messages":"43","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"44","messages":"45","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"46"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"49"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"52","messages":"53","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"C:\\Users\\кибер\\Desktop\\JS-16-19\\dodo-pizza\\src\\pages\\cart\\index.jsx",["54"],"C:\\Users\\кибер\\Desktop\\JS-16-19\\dodo-pizza\\src\\components\\cartItem\\index.js",[],["55","56"],"C:\\Users\\кибер\\Desktop\\JS-16-19\\dodo-pizza\\src\\redux\\reducers\\cart.js",["57"],"const initialState = {\r\n  items: {},\r\n  totalPrice: 0,\r\n  totalCount: 0,\r\n};\r\n\r\nconst getTotalPrice = (arr) => {\r\n  return arr.reduce((sum, obj) => obj.price + sum, 0);\r\n};\r\n\r\nconst _get = (obj, path) => {\r\n  const [firstKey, ...keys] = path.split('.');\r\n  return keys.reduce((val, key) => {\r\n    return val[key];\r\n  }, obj[firstKey]);\r\n};\r\n\r\nconst getTotalSum = (obj, path) => {\r\n  return Object.values(obj).reduce((sum, obj) => {\r\n    const value = _get(obj, path);\r\n    return sum + value;\r\n  }, 0);\r\n};\r\n\r\nconst cart = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case 'ADD_PIZZA_CART': {\r\n      const currentPizzaItems = !state.items[action.payload.id]\r\n        ? [action.payload]\r\n        : [...state.items[action.payload.id].items, action.payload];\r\n      const newItems = {\r\n        ...state.items,\r\n        [action.payload.id]: {\r\n          items: currentPizzaItems,\r\n          totalPrice: getTotalPrice(currentPizzaItems),\r\n        },\r\n      };\r\n      const totalCount = getTotalSum(newItems, 'items.length');\r\n      const totalPrice = getTotalSum(newItems, 'totalPrice');\r\n      return {\r\n        ...state,\r\n        items: newItems,\r\n        totalCount,\r\n        totalPrice,\r\n      };\r\n    }\r\n    case 'CLEAR_CART': {\r\n      return {\r\n        ...state,\r\n        items: {},\r\n        totalPrice: 0,\r\n        totalCount: 0,\r\n      };\r\n    }\r\n    case 'PLUS_CART_ITEM': {\r\n      const newObjItems = [\r\n        ...state.items[action.payload].items,\r\n        state.items[action.payload].items[0],\r\n      ];\r\n\r\n      const newItems = {\r\n        ...state.items,\r\n        [action.payload]: { items: newObjItems, totalPrice: getTotalPrice(newObjItems) },\r\n      };\r\n      const totalPrice = getTotalSum(newItems, 'totalPrice');\r\n      const totalCount = getTotalSum(newItems, 'items.length');\r\n      return {\r\n        ...state,\r\n        items: newItems,\r\n        totalPrice,\r\n        totalCount,\r\n      };\r\n    }\r\n    case 'MINUS_CART_ITEM': {\r\n      const oldItems = state.items[action.payload].items;\r\n      const newObjItems =\r\n        oldItems.length > 1 ? state.items[action.payload].items.slice(1) : oldItems;\r\n\r\n      const newItems = {\r\n        ...state.items,\r\n        [action.payload]: { items: newObjItems, totalPrice: getTotalPrice(newObjItems) },\r\n      };\r\n      const totalPrice = getTotalSum(newItems, 'totalPrice');\r\n      const totalCount = getTotalSum(newItems, 'items.length');\r\n\r\n      return {\r\n        ...state,\r\n        items: newItems,\r\n        totalPrice,\r\n        totalCount,\r\n      };\r\n    }\r\n    case 'REMOVE_CART_ITEM': {\r\n      const newItems = { ...state.items };\r\n      const currentPrice = newItems[action.payload].totalPrice;\r\n      const currentCount = newItems[action.payload].items.length;\r\n\r\n      delete newItems[action.payload];\r\n\r\n      return {\r\n        ...state,\r\n        items: newItems,\r\n        totalPrice: state.totalPrice - currentPrice,\r\n        totalCount: state.totalCount - currentCount,\r\n      };\r\n    }\r\n  }\r\n  return state;\r\n};\r\n\r\nexport default cart;","C:\\Users\\кибер\\Desktop\\JS-16-19\\dodo-pizza\\src\\components\\header\\index.js",["58"],"C:\\Users\\кибер\\Desktop\\JS-16-19\\dodo-pizza\\src\\redux\\reducers\\filters.js",[],"C:\\Users\\кибер\\Desktop\\JS-16-19\\dodo-pizza\\src\\redux\\reducers\\index.js",[],"C:\\Users\\кибер\\Desktop\\JS-16-19\\dodo-pizza\\src\\components\\filter\\index.js",["59","60"],"C:\\Users\\кибер\\Desktop\\JS-16-19\\dodo-pizza\\src\\pages\\home.jsx",[],"C:\\Users\\кибер\\Desktop\\JS-16-19\\dodo-pizza\\src\\components\\sortPopUp\\index.js",["61"],"import React, { useState, useRef, useEffect } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { setSortBy } from '../../redux/actions/filters';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\n\r\nconst SortPopUp = React.memo(function SortPopUp({ items }) {\r\n  const [sort, setSort] = useState(false);\r\n  const [active, setActive] = useState(0);\r\n  const sortPop = useRef();\r\n\r\n  const dispatch = useDispatch();\r\n\r\n  const sortStore = useSelector(({ filters }) => {\r\n    return {\r\n      sortBy: filters.sortBy,\r\n    };\r\n  });\r\n\r\n  \r\n  const handleClick = () => {\r\n    setSort(sort ? false : true);\r\n  };\r\n\r\n  const onSelectItem = (index) => {\r\n    setActive(index);\r\n    setSort(false);\r\n    dispatch(setSortBy(items[index]));\r\n  };\r\n\r\n  const handleOutsideClick = (e) => {\r\n    if (!e.path.includes(sortPop.current)) {\r\n      setSort(false);\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    document.body.addEventListener('click', handleOutsideClick);\r\n  }, []);\r\n\r\n  return (\r\n    <div ref={sortPop} className='sort'>\r\n      <div onClick={() => handleClick()} className='sort__label'>\r\n        <svg\r\n          className={`sort__arrow ${sort ? 'is-active' : ''}`}\r\n          width='10'\r\n          height='6'\r\n          viewBox='0 0 10 6'\r\n          fill='none'\r\n          xmlns='http://www.w3.org/2000/svg'>\r\n          <path\r\n            d='M10 5C10 5.16927 9.93815 5.31576 9.81445 5.43945C9.69075 5.56315 9.54427 5.625 9.375 5.625H0.625C0.455729 5.625 0.309245 5.56315 0.185547 5.43945C0.061849 5.31576 0 5.16927 0 5C0 4.83073 0.061849 4.68424 0.185547 4.56055L4.56055 0.185547C4.68424 0.061849 4.83073 0 5 0C5.16927 0 5.31576 0.061849 5.43945 0.185547L9.81445 4.56055C9.93815 4.68424 10 4.83073 10 5Z'\r\n            fill='#2C2C2C'\r\n          />\r\n        </svg>\r\n        <b>Сортировка по:</b>\r\n        <span>{items[active].name}</span>\r\n      </div>\r\n      <div className={`sort__popup ${sort ? 'is-active' : ''}`}>\r\n        <ul>\r\n          {items.map((item, index) => {\r\n            // console.log(item.name)\r\n            return (\r\n              <li\r\n                key={item + index}\r\n                onClick={() => onSelectItem(index)}\r\n                className={index === active ? 'active' : ''}>\r\n                {item.name}\r\n              </li>\r\n            );\r\n          })}\r\n        </ul>\r\n      </div>\r\n    </div>\r\n  );\r\n});\r\n\r\nexport default SortPopUp;\r\n\r\nSortPopUp.propTypes = {\r\n  items: PropTypes.arrayOf(PropTypes.object),\r\n};\r\n\r\nSortPopUp.defaultProps = {\r\n  items: [{ name: 'Кролик' }, { name: 'Сендвич' }, { name: 'Кола' }],\r\n};\r\n","C:\\Users\\кибер\\Desktop\\JS-16-19\\dodo-pizza\\src\\components\\menu\\index.js",["62","63","64","65","66","67","68","69"],"import React, { useEffect, useState } from 'react';\r\nimport Filter from '../filter';\r\nimport Sort from '../sortPopUp';\r\nimport Pizzas from '../pizzas';\r\nimport { setCategory } from '../../redux/actions/filters';\r\nimport { useDispatch, useSelector, connect } from 'react-redux';\r\nimport { addPizzaToCart } from '../../redux/actions/cart';\r\nimport { fetchPizzas } from '../../redux/actions/pizzas';\r\n\r\nfunction Menu() {\r\n  const dispatch = useDispatch();\r\n\r\n  const items = useSelector(({ pizzas }) => pizzas.items);\r\n\r\n  const hranilishe = useSelector(({ filters }) => {\r\n    return {\r\n      sortBy: filters.sortBy,\r\n    };\r\n  });\r\n  const [title, setTitle] = React.useState(true);\r\n  const [searchValue, setSearchValue] = React.useState('');\r\n\r\n  const { category, sortBy } = useSelector(({ filters }) => filters);\r\n\r\n  const handleSearchValue = (event) => {\r\n    setSearchValue(event.target.value);\r\n    console.log(searchValue);\r\n  };\r\n\r\n  const handleAddPizzaToCart = (obj) => {\r\n    dispatch(addPizzaToCart(obj));\r\n  };\r\n\r\n  const sortItems = [\r\n    { name: 'популярности', type: 'rating', order: 'desc' },\r\n    { name: 'цене', type: 'price', order: 'desc' },\r\n    { name: 'алфавиту', type: 'name', order: 'asc' },\r\n  ];\r\n\r\n  React.useEffect(() => {\r\n    dispatch(fetchPizzas(sortBy,category));\r\n  }, [sortBy,category]);\r\n\r\n  const seitek = useSelector(({ filters }) => {\r\n    return {\r\n      categoryIndex: filters.category,\r\n    };\r\n  });\r\n\r\n  return (\r\n    <section className='menu'>\r\n      <div className='container'>\r\n        <label>\r\n          <input type='text' placeholder='Поиск пиццы' onChange={(e) => handleSearchValue(e)} />\r\n        </label>\r\n        <div className='row menu__row'>\r\n          <Filter />\r\n          <Sort items={sortItems} />\r\n        </div>\r\n        <div className='pizzas'>\r\n          <h2 className='pizzas__title'>{title && `Все пиццы`}</h2>\r\n          <div className='row pizzas__row pt-35 ajara'>\r\n            {items\r\n              .filter((element) => {\r\n                if (searchValue === '') {\r\n                  return element;\r\n                } else if (element.name.toLowerCase().includes(searchValue.toLowerCase())) {\r\n                  return element;\r\n                }\r\n              })\r\n              .map((item) => {\r\n                if (seitek.categoryIndex === -1) {\r\n                  return <Pizzas onClickAddPizza={handleAddPizzaToCart} {...item} key={item.id} />;\r\n                } else if (item.category === seitek.categoryIndex) {\r\n                  return <Pizzas onClickAddPizza={handleAddPizzaToCart} {...item} key={item.id} />;\r\n                }\r\n              })}\r\n          </div>\r\n        </div>\r\n        {/* <div className='pizzas'>\r\n          <h2 className='pizzas__title'>Закуски</h2>\r\n          <div className='row pizzas__row pt-35 ajara'>\r\n            {snacks\r\n              .filter((element) => {\r\n                if (searchValue === '') {\r\n                  return element;\r\n                } else if (element.name.toLowerCase().includes(searchValue.toLowerCase())) {\r\n                  return element;\r\n                }\r\n              })\r\n              .map((item) => {\r\n                if (seitek.categoryIndex === -1) {\r\n                  return <Pizzas {...item} key={item.id} />;\r\n                } else if (item.category === seitek.categoryIndex) {\r\n                  return <Pizzas {...item} key={item.id} />;\r\n                }\r\n              })}\r\n          </div>\r\n        </div>\r\n        <div className='pizzas'>\r\n          <h2 className='pizzas__title'>Десерты</h2>\r\n          <div className='row pizzas__row pt-35 ajara'>\r\n            {desserts\r\n              .filter((element) => {\r\n                if (searchValue === '') {\r\n                  return element;\r\n                } else if (element.name.toLowerCase().includes(searchValue.toLowerCase())) {\r\n                  return element;\r\n                }\r\n              })\r\n              .map((item) => {\r\n                if (seitek.categoryIndex === -1) {\r\n                  return <Pizzas {...item} key={item.id} />;\r\n                } else if (item.category === seitek.categoryIndex) {\r\n                  return <Pizzas {...item} key={item.id} />;\r\n                }\r\n              })}\r\n          </div>\r\n        </div> */}\r\n      </div>\r\n    </section>\r\n  );\r\n}\r\n\r\nexport default connect()(Menu);\r\n\r\n//  {.map((item) => {\r\n//                 return <Pizzas {...item} key={item.id} />;\r\n//               })}\r\n\r\n// const arr = [\r\n//   {\r\n//     price: 100,\r\n//   },\r\n//   {\r\n//     price: 200,\r\n//   },\r\n//   {\r\n//     price: 300,\r\n//   },\r\n// ];\r\n\r\n// const result = arr.reduce((sum, item) => {\r\n//   return sum + item.price;\r\n// }, 0);\r\n\r\n// let sum = 0;\r\n\r\n// const result = arr.map((item) => sum += item.price);\r\n\r\n// console.log(sum);\r\n","C:\\Users\\кибер\\Desktop\\JS-16-19\\dodo-pizza\\src\\redux\\actions\\pizzas.js",[],"C:\\Users\\кибер\\Desktop\\JS-16-19\\dodo-pizza\\src\\components\\pizzas\\index.js",["70"],{"ruleId":"71","severity":1,"message":"72","line":6,"column":8,"nodeType":"73","messageId":"74","endLine":6,"endColumn":12},{"ruleId":"75","replacedBy":"76"},{"ruleId":"77","replacedBy":"78"},{"ruleId":"79","severity":1,"message":"80","line":26,"column":3,"nodeType":"81","messageId":"82","endLine":107,"endColumn":4},{"ruleId":"71","severity":1,"message":"83","line":1,"column":17,"nodeType":"73","messageId":"74","endLine":1,"endColumn":25},{"ruleId":"71","severity":1,"message":"84","line":7,"column":17,"nodeType":"73","messageId":"74","endLine":7,"endColumn":25},{"ruleId":"71","severity":1,"message":"85","line":20,"column":9,"nodeType":"73","messageId":"74","endLine":20,"endColumn":18},{"ruleId":"71","severity":1,"message":"86","line":13,"column":9,"nodeType":"73","messageId":"74","endLine":13,"endColumn":18},{"ruleId":"71","severity":1,"message":"87","line":1,"column":17,"nodeType":"73","messageId":"74","endLine":1,"endColumn":26},{"ruleId":"71","severity":1,"message":"83","line":1,"column":28,"nodeType":"73","messageId":"74","endLine":1,"endColumn":36},{"ruleId":"71","severity":1,"message":"88","line":5,"column":10,"nodeType":"73","messageId":"74","endLine":5,"endColumn":21},{"ruleId":"71","severity":1,"message":"89","line":15,"column":9,"nodeType":"73","messageId":"74","endLine":15,"endColumn":19},{"ruleId":"71","severity":1,"message":"90","line":20,"column":17,"nodeType":"73","messageId":"74","endLine":20,"endColumn":25},{"ruleId":"91","severity":1,"message":"92","line":42,"column":6,"nodeType":"93","endLine":42,"endColumn":23,"suggestions":"94"},{"ruleId":"95","severity":1,"message":"96","line":64,"column":33,"nodeType":"97","messageId":"98","endLine":64,"endColumn":35},{"ruleId":"95","severity":1,"message":"99","line":71,"column":27,"nodeType":"97","messageId":"98","endLine":71,"endColumn":29},{"ruleId":"71","severity":1,"message":"100","line":3,"column":8,"nodeType":"73","messageId":"74","endLine":3,"endColumn":18},"no-unused-vars","'cart' is defined but never used.","Identifier","unusedVar","no-native-reassign",["101"],"no-negated-in-lhs",["102"],"default-case","Expected a default case.","SwitchStatement","missingDefaultCase","'useState' is defined but never used.","'setNames' is assigned a value but never used.","'sortItems' is assigned a value but never used.","'sortStore' is assigned a value but never used.","'useEffect' is defined but never used.","'setCategory' is defined but never used.","'hranilishe' is assigned a value but never used.","'setTitle' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook React.useEffect has a missing dependency: 'dispatch'. Either include it or remove the dependency array.","ArrayExpression",["103"],"array-callback-return","Array.prototype.filter() expects a value to be returned at the end of arrow function.","ArrowFunctionExpression","expectedAtEnd","Array.prototype.map() expects a value to be returned at the end of arrow function.","'classNames' is defined but never used.","no-global-assign","no-unsafe-negation",{"desc":"104","fix":"105"},"Update the dependencies array to be: [sortBy, category, dispatch]",{"range":"106","text":"107"},[1305,1322],"[sortBy, category, dispatch]"]